# Manually triggered for creating a TA-Lib release.
#
# More info: README-DEVS.md

name: publish-step-1

# Controls when the workflow will run
on:
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Prepare shell envs
        shell: bash
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "PYTHON=python3" >> $GITHUB_ENV
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Tagging
        run: |
          TAG="v${{ env.VERSION }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            git tag -d "$TAG"
            git push --delete origin "$TAG"
          fi
          git tag "$TAG"
          git push origin "$TAG"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.VERSION }}"
          release_name: "v${{ env.VERSION }}"
          body: ${{ github.event.inputs.release_body }}
          draft: true
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*
          asset_name: $(basename ${{ steps.create_release.outputs.upload_url }})
          asset_content_type: application/octet-stream
